// сгенерируем новое псевдо случайное число
int number = new Random().Next(1, 32000);
Console.WriteLine("Generated number: " + number);

// введем функцию, которая находит вторую цифру слева и удаляет ее
int ShowSomeDigit(int number)
{
    int newDigit = number % 10; //в переменной newDigit будет храниться новое число. Положим в него сразу значение единиц исходного числа
    int i = 10; // счетчик. Служит для восстановления десятков сотен и т.д в ходе выполнения цикла. В первом проходе восстанавливаются десятки, во втором сотни и т.д
    int count = 1; // счетчик. см ниже описание
    {
        while (number > 1000) //отделяем от исходного числа по одной цифре, пока не дойдем до третьей слева (Включительно)
        {
            number = number / 10;
            newDigit = newDigit + (number % 10) * i; //в переменной собираем новое число путем умножения остатка от целочисленного деления number на счетчик i (i=10,100,1000 и т.д)
            i = i * 10;
            count++;
        }

        // соберем окончтаельно новое число из значения newDigit, полученного в ходе выполнения цикла
        // и остатка после цикла от значения исходного числа в переменной number
        // деление на 100 - т.к нужно получить значение самого левого разряда (100 - т.к остановились на 3й цифре слева)
        // Convert.ToInt32(Math.Pow(10, count)) - тут восстанавливаем нужное количество нулей для newDigit в зависимости от кругов цикла
        newDigit = newDigit + number / 100 * Convert.ToInt32(Math.Pow(10, count));

        return (newDigit);


    }
}

// выведем результат
Console.WriteLine("Result: " + ShowSomeDigit(number));



//Напишите программу, которая принимает на вход целое число любой разрядности число и удаляет вторую цифру слева направо этого
//числа

// number = 5744
// newDigit = 4
// 
// number = 574
// newDigit = 44
// 
// number = 57
// newDigit = 44